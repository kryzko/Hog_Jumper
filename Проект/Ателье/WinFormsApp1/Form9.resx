<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f/l/3GV0E03QjzkAAAAASUVORK5CYII=
</value>
  </data>
</root>